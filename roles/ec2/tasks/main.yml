---
 - name: Install the boto module
   pip:
     name: boto
     executable: pip3

 - name: Install the boto3 module
   pip:
     name: boto3
     executable: pip3

 - name: Create ec2_security_group
   local_action:
     module: ec2_group
     name: swifty
     description: "swifty security group"
     region: "{{ec2_region}}"
     vpc_id: "{{ec2_vpc_id}}"
     rules:
       - proto: all
         cidr_ip: 0.0.0.0/0
       - proto: all
         group_name: swifty
     rules_egress:
       - proto: all
         cidr_ip: 0.0.0.0/0
   register: firewall

 - name: Gather vpc_subnet_id by vpc_id
   local_action:
     module: ec2_vpc_subnet_facts
     region: "{{ ec2_region }}"
     filters:
       vpc-id: "{{ec2_vpc_id}}"
   register: subnet_facts

 - name: Provision core instances
   local_action:
     module: ec2
     key_name: "{{ ec2_keypair }}"
     group_id: "{{firewall.group_id}}"
     instance_type: "{{ ec2_instance_type }}"
     vpc_subnet_id: "{{ subnet_facts.subnets|map(attribute='id')|list|first }}"
     image: "{{ ec2_image }}"
     region: "{{ ec2_region }}"
     assign_public_ip: yes
     wait: true
     count: 1
     volumes:
     - device_name: /dev/sda1
       volume_size: 20
   register: ec2_core

 - name: add host to inventory
   add_host:
     hostname: "{{ item.public_ip }}"
     core_public_ip: "{{ item.public_ip }}"
     core_private_ip: "{{ item.private_ip }}"
     core_public_dns: "{{ item.public_dns_name }}"
     groups:
       - swy-core
       - dep-core
   with_items: '{{ ec2_core.instances }}'

 - name: Wait for the instances to boot by checking the ssh port
   wait_for: host="{{item.public_ip}}" port=22 delay=20 timeout=320 state=started
   with_items: '{{ ec2_core.instances }}'

 - name: Provision worker instances
   local_action:
     module: ec2
     key_name: "{{ ec2_keypair }}"
     group_id: "{{firewall.group_id}}"
     instance_type: "{{ ec2_instance_type }}"
     vpc_subnet_id: "{{ subnet_facts.subnets|map(attribute='id')|list|first }}"
     image: "{{ ec2_image }}"
     region: "{{ ec2_region }}"
     assign_public_ip: yes
     wait: true
     count: 1
     volumes:
     - device_name: /dev/sda1
       volume_size: 20
   register: ec2_worker

 - name: add host to inventory
   add_host:
     hostname: "{{ item.public_ip }}"
     worker_public_ip: "{{ item.public_ip }}"
     worker_private_ip: "{{ item.private_ip }}"
     worker_public_dns: "{{ item.public_dns_name }}"
     groups:
       - swy-worker
       - dep-worker
   with_items: '{{ ec2_worker.instances }}'

 - name: Wait for the instances to boot by checking the ssh port
   wait_for: host="{{item.public_ip}}" port=22 delay=20 timeout=320 state=started
   with_items: '{{ ec2_worker.instances }}'
